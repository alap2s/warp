rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isJoining(incoming, existing) {
      return incoming.hasAll(existing) &&
             incoming.size() == existing.size() + 1 &&
             incoming.hasAny([request.auth.uid]);
    }

    function isLeaving(incoming, existing) {
      return existing.hasAll(incoming) &&
             existing.size() == incoming.size() + 1 &&
             !incoming.hasAny([request.auth.uid]) &&
             existing.hasAny([request.auth.uid]);
    }

    function isOnlyChangingParticipants() {
      let otherFields = ['what', 'when', 'where', 'icon', 'ownerId', 'createdAt'];
      return request.resource.data.diff(resource.data).affectedKeys.hasOnly(['participants']) &&
             (isJoining(request.resource.data.participants, resource.data.participants) ||
              isLeaving(request.resource.data.participants, resource.data.participants));
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if isOwner(userId) &&
                       request.resource.data.username is string &&
                       request.resource.data.username.size() > 0 &&
                       request.resource.data.username.size() < 30 &&
                       request.resource.data.icon is string;
      allow update: if isOwner(userId) &&
                       request.resource.data.username is string &&
                       request.resource.data.username.size() > 0 &&
                       request.resource.data.username.size() < 30 &&
                       request.resource.data.icon is string;
      allow delete: if isOwner(userId);
    }

    match /warps/{warpId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.ownerId) &&
                       request.resource.data.what is string &&
                       request.resource.data.what.size() > 0 &&
                       request.resource.data.what.size() < 140 &&
                       request.resource.data.when is timestamp &&
                       request.resource.data.where is string &&
                       request.resource.data.where.size() > 0 &&
                       request.resource.data.where.size() < 140 &&
                       request.resource.data.icon is string &&
                       !('participants' in request.resource.data);

      allow update: if isOwner(resource.data.ownerId) || isOnlyChangingParticipants();

      allow delete: if isOwner(resource.data.ownerId);
    }
  }
} 